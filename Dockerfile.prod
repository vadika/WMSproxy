FROM python:3.10-slim as builder

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    cmake \
    libsqlite3-dev \
    sqlite3 \
    libtiff-dev \
    libcurl4-openssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Install PROJ 9.2.1 from source
RUN curl -L https://download.osgeo.org/proj/proj-9.5.1.tar.gz -o proj-9.5.1.tar.gz \
    && tar xzf proj-9.5.1.tar.gz \
    && cd proj-9.5.1 \
    && mkdir build \
    && cd build \
    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local \
    && make -j$(nproc) \
    && make install \
    && projsync --all \
    && rm -rf /app/proj-9.5.1* \
    && ldconfig

# Create and use virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install dependencies first to cache them
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

FROM python:3.10-slim
WORKDIR /app

# Copy virtual environment
COPY --from=builder /opt/venv /opt/venv

# Copy application code
COPY wms_proxy.py .

# Set environment variables
ENV PATH="/opt/venv/bin:$PATH"

# Copy PROJ data and set environment variable
COPY --from=builder /usr/local/share/proj /usr/local/share/proj
ENV PROJ_LIB=/usr/local/share/proj

# Create and switch to non-root user
RUN useradd -u 1001 -m appuser && \
    chown -R appuser:appuser /app && \
    chown -R appuser:appuser /opt/venv

USER appuser

EXPOSE 5555

# Run with Gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:5555", "--workers", "4", "--threads", "2", "wms_proxy:app"]
